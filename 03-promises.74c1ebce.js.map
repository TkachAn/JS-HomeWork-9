{"mappings":"oeACA,IAAAA,EAAAC,EAAA,SAEaC,SAASC,MAAM,GACvBC,iBAAiB,UAAWC,IAChCA,EAAMC,iBACN,MACCC,UAAUC,MAACA,EAAKC,KAACA,EAAIC,OAACA,IACnBL,EAAMM,cACVC,QAAQC,IAAI,SAAUL,EAAMM,OAC5B,MAAMC,EAAKP,EAAMM,MACXE,EAAKN,EAAOI,MACZG,EAAKR,EAAKK,MAChBT,EAAMM,cAAcO,QACpBC,YAAW,KAGTC,EAAcJ,EAAIC,GACjBI,KAAK,uBAAqBL,QAAWC,OAAQK,MAE3C,sBAAKN,QAAwBC,SAG/BF,MAEJ,MAAMK,EAAgB,CAACG,EAASf,IACvB,IAAIgB,SAAQ,CAACC,EAASC,KAC3Bd,QAAQC,IAAI,SAASL,KACxB,IAAImB,EAAM,EAGLC,EAAUC,aAAY,KACHC,KAAKC,SAAW,IAErCN,EAAQ,qBAAqBF,QAAef,KAC5CI,QAAQC,IAAI,gBAAiBU,EAAU,OAAQI,EAAMnB,GACrDR,EAAAgC,OAAOC,QAAQ,qBAAqBV,QAAef,OAEnDkB,EAAO,oBAAoBH,QAAef,KAC1CI,QAAQC,IAAI,eAAgBU,EAAU,OAAQI,EAAMnB,GACpDR,EAAAgC,OAAOE,QAAQ,oBAAoBX,QAAef,MAG/CmB,EAAMJ,EAAS,GAClBY,cAAcP,GAEfD,MACCnB","sources":["src/js/03-promises.js"],"sourcesContent":["//import Notiflix from 'notiflix';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n// const form = document.querySelector(\".form\");\nconst form = document.forms[0];\nform.addEventListener(\"submit\", (event) => {\n\tevent.preventDefault();\n\tconst {\n\t\telements: {delay,step,amount}\n\t} = event.currentTarget;\n\tconsole.log(\"delay \", delay.value);\n\tconst dv = delay.value;\n\tconst av = amount.value;\n\tconst sv = step.value;\n\tevent.currentTarget.reset();\n\tsetTimeout(() => {\n\t\t// return new Promise((resolve, reject) => {\n\t\t// \tresolve({ av, sv });\n\t\t\tcreatePromise(av, sv)\n\t\t\t.then(`✅ Fulfilled promise ${av} in ${sv}ms`)\n\t\t\t\n\t\t\t.catch(`❌ Rejected promise ${av} in ${sv}ms`)\n\t\t\t;\n\t\t//})\n\t}, dv);\n});//.\nconst createPromise = (position,delay )=> {\n  return new Promise((resolve, reject) => {\n    console.log(`delay ${delay}`);\n\tlet cnt = 1;\n\t\t// const av = amount.value;\n\t\t// const sv = step.value;\n\t\tlet counter = setInterval(() => {\n\t\t\tconst shouldResolve = Math.random() > 0.3;\n\t\t\tif (shouldResolve) {\n\t\t\t\tresolve(`Fulfilled promise ${position} in ${delay}`);\n\t\t\t\tconsole.log(\"resolve step:\", position, \" ms:\", cnt * delay);\n\t\t\t\tNotify.success(`Fulfilled promise ${position} in ${delay}`);\t// Fulfill\n\t\t\t} else {\n\t\t\t\treject(`rejected promise ${position} in ${delay}`);\n\t\t\t\tconsole.log(\"reject step:\", position, \" ms:\", cnt * delay);\n\t\t\t\tNotify.failure(`rejected promise ${position} in ${delay}`);\t// Reject\n\t\t\t}\n\t\t\t// console.log(\"step:\", cnt,\" ms:\", cnt*delay);\n\t\t\tif (cnt > position-1) {\n\t\t\t\tclearInterval(counter);\n\t\t\t}\n\t\t\tcnt++;\n\t\t},delay)\n  });\n\t\n};\n"],"names":["$iQIUW","parcelRequire","document","forms","addEventListener","event","preventDefault","elements","delay","step","amount","currentTarget","console","log","value","dv","av","sv","reset","setTimeout","$47d4ff9957288465$var$createPromise","then","catch","position","Promise","resolve","reject","cnt","counter","setInterval","Math","random","Notify","success","failure","clearInterval"],"version":3,"file":"03-promises.74c1ebce.js.map"}