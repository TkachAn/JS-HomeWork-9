{"mappings":"gfACA,IAAAA,EAAAC,EAAA,SAEaC,SAASC,MAAM,GACvBC,iBAAiB,UAAU,SAACC,GAChCA,EAAMC,iBACN,IAEuBC,EAAnBF,EAAMG,cADTC,SAAWC,EAAKH,EAALG,MAAMC,EAAIJ,EAAJI,KAAKC,EAAML,EAANK,OAEvBC,QAAQC,IAAI,SAAUJ,EAAMK,OAC5B,IAAMC,EAAKN,EAAMK,MACXE,EAAKL,EAAOG,MACZG,EAAKP,EAAKI,MAChBV,EAAMG,cAAcW,QACpBC,YAAW,WAGTC,EAAcJ,EAAIC,GACjBI,KAAK,uBAAkCC,OAATN,EAAG,QAASM,OAAHL,EAAG,OAExCM,MAAI,sBAA+BD,OAATN,EAAG,QAASM,OAAHL,EAAG,SAGxCF,MAEJ,IAAMK,EAAgB,SAACI,EAASf,GAC9B,OAAO,IAAIgB,SAAQ,SAACC,EAASC,GAC3Bf,QAAQC,IAAI,SAAeS,OAANb,IACxB,IAAImB,EAAM,EAGLC,EAAUC,aAAY,WACHC,KAAKC,SAAW,IAErCN,EAAQ,qBAAoCJ,OAAfE,EAAS,QAAYF,OAANb,IAC5CG,QAAQC,IAAI,gBAAiBW,EAAU,OAAQI,EAAMnB,GACrDV,EAAAkC,OAAOC,QAAQ,qBAAoCZ,OAAfE,EAAS,QAAYF,OAANb,MAEnDkB,EAAO,oBAAmCL,OAAfE,EAAS,QAAYF,OAANb,IAC1CG,QAAQC,IAAI,eAAgBW,EAAU,OAAQI,EAAMnB,GACpDV,EAAAkC,OAAOE,QAAQ,oBAAmCb,OAAfE,EAAS,QAAYF,OAANb,KAG/CmB,EAAMJ,EAAS,GAClBY,cAAcP,GAEfD,MACCnB,O","sources":["src/js/03-promises.js"],"sourcesContent":["//import Notiflix from 'notiflix';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n// const form = document.querySelector(\".form\");\nconst form = document.forms[0];\nform.addEventListener(\"submit\", (event) => {\n\tevent.preventDefault();\n\tconst {\n\t\telements: {delay,step,amount}\n\t} = event.currentTarget;\n\tconsole.log(\"delay \", delay.value);\n\tconst dv = delay.value;\n\tconst av = amount.value;\n\tconst sv = step.value;\n\tevent.currentTarget.reset();\n\tsetTimeout(() => {\n\t\t// return new Promise((resolve, reject) => {\n\t\t// \tresolve({ av, sv });\n\t\t\tcreatePromise(av, sv)\n\t\t\t.then(`✅ Fulfilled promise ${av} in ${sv}ms`)\n\t\t\t\n\t\t\t.catch(`❌ Rejected promise ${av} in ${sv}ms`)\n\t\t\t;\n\t\t//})\n\t}, dv);\n});//.\nconst createPromise = (position,delay )=> {\n  return new Promise((resolve, reject) => {\n    console.log(`delay ${delay}`);\n\tlet cnt = 1;\n\t\t// const av = amount.value;\n\t\t// const sv = step.value;\n\t\tlet counter = setInterval(() => {\n\t\t\tconst shouldResolve = Math.random() > 0.3;\n\t\t\tif (shouldResolve) {\n\t\t\t\tresolve(`Fulfilled promise ${position} in ${delay}`);\n\t\t\t\tconsole.log(\"resolve step:\", position, \" ms:\", cnt * delay);\n\t\t\t\tNotify.success(`Fulfilled promise ${position} in ${delay}`);\t// Fulfill\n\t\t\t} else {\n\t\t\t\treject(`rejected promise ${position} in ${delay}`);\n\t\t\t\tconsole.log(\"reject step:\", position, \" ms:\", cnt * delay);\n\t\t\t\tNotify.failure(`rejected promise ${position} in ${delay}`);\t// Reject\n\t\t\t}\n\t\t\t// console.log(\"step:\", cnt,\" ms:\", cnt*delay);\n\t\t\tif (cnt > position-1) {\n\t\t\t\tclearInterval(counter);\n\t\t\t}\n\t\t\tcnt++;\n\t\t},delay)\n  });\n\t\n};\n"],"names":["$h6c0i","parcelRequire","document","forms","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay","step","amount","console","log","value","dv","av","sv","reset","setTimeout","$ce04d3a99e08e73b$var$createPromise","then","concat","catch","position","Promise","resolve","reject","cnt","counter","setInterval","Math","random","Notify","success","failure","clearInterval"],"version":3,"file":"03-promises.cb09f6a2.js.map"}