{"mappings":"gfACA,IAAAA,EAAAC,EAAA,SAEaC,SAASC,MAAM,GACvBC,iBAAiB,UAAU,SAACC,GAChCA,EAAMC,iBACN,IAEuBC,EAAnBF,EAAMG,cADTC,SAAWC,EAAKH,EAALG,MAAMC,EAAIJ,EAAJI,KAAKC,EAAML,EAANK,OAEvBC,QAAQC,IAAI,SAAUJ,EAAMK,OAC5B,IAAMC,EAAKN,EAAMK,MACXE,EAAKL,EAAOG,MACZG,EAAKP,EAAKI,MAChBV,EAAMG,cAAcW,QACpBC,YAAW,WAGTC,EAAcL,EAAIC,EAAIC,GACrBI,KAAK,uBAAgCC,OAAPP,EAAG,MAAaO,OAATN,EAAG,QAASM,OAAHL,EAAG,OAE/CM,MAAI,sBAA6BD,OAAPP,EAAG,MAAaO,OAATN,EAAG,QAASM,OAAHL,EAAG,SAG/CF,MAEJ,IAAMK,EAAgB,SAACX,EAAOe,EAASC,GACrC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BhB,QAAQC,IAAI,SAAmBS,OAAVG,IACxB,IAAII,EAAM,EAGR9B,EAAA+B,OAAOC,QAAQ,eAAqBT,OAANb,IAC/B,IAAIuB,EAAUC,aAAY,WACHC,KAAKC,SAAW,IAErCR,EAAQ,qBAAoCL,OAAfE,EAAS,QAAgBF,OAAVG,IAC5Cb,QAAQC,IAAI,gBAAiBgB,EAAK,OAAQA,EAAMJ,EAAUW,OAAO3B,IACjEV,EAAA+B,OAAOC,QAAQ,qBAA+BT,OAAVO,EAAI,QAAoCP,OAA9BO,EAAMJ,EAAUW,OAAO3B,OAErEmB,EAAO,oBAAmCN,OAAfE,EAAS,QAAgBF,OAAVG,IAC1Cb,QAAQC,IAAI,eAAgBgB,EAAK,OAAQA,EAAMJ,EAAUW,OAAO3B,IAChEV,EAAA+B,OAAOO,QAAQ,oBAA8Bf,OAAVO,EAAI,QAAoCP,OAA9BO,EAAMJ,EAAUW,OAAO3B,MAGjEoB,EAAML,EAAS,GAClBc,cAAcN,GAEfH,MACCJ,O","sources":["src/js/03-promises.js"],"sourcesContent":["//import Notiflix from 'notiflix';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n// const form = document.querySelector(\".form\");\nconst form = document.forms[0];\nform.addEventListener(\"submit\", (event) => {\n\tevent.preventDefault();\n\tconst {\n\t\telements: {delay,step,amount}\n\t} = event.currentTarget;\n\tconsole.log(\"delay \", delay.value);\n\tconst dv = delay.value;\n\tconst av = amount.value;\n\tconst sv = step.value;\n\tevent.currentTarget.reset();\n\tsetTimeout(() => {\n\t\t// return new Promise((resolve, reject) => {\n\t\t// \tresolve({ av, sv });\n\t\t\tcreatePromise(dv, av, sv)\n\t\t\t.then(`✅ Fulfilled promise ${dv}  ${av} in ${sv}ms`)\n\t\t\t\n\t\t\t.catch(`❌ Rejected promise ${dv}  ${av} in ${sv}ms`)\n\t\t\t;\n\t\t//})\n\t}, dv);\n});//.\nconst createPromise = (delay, position,stepDelay )=> {\n  return new Promise((resolve, reject) => {\n    console.log(`delay ${stepDelay}`);\n\tlet cnt = 1;\n\t\t// const av = amount.value;\n\t\t// const sv = step.value;\n\t  Notify.success(`First delay ${delay}`);\n\t\tlet counter = setInterval(() => {\n\t\t\tconst shouldResolve = Math.random() > 0.3;\n\t\t\tif (shouldResolve) {\n\t\t\t\tresolve(`Fulfilled promise ${position} in ${stepDelay}`);\n\t\t\t\tconsole.log(\"resolve step:\", cnt, \" ms:\", cnt * stepDelay+Number(delay));\n\t\t\t\tNotify.success(`Fulfilled promise ${cnt} in ${cnt * stepDelay+Number(delay)}`);\t// Fulfill\n\t\t\t} else {\n\t\t\t\treject(`rejected promise ${position} in ${stepDelay}`);\n\t\t\t\tconsole.log(\"reject step:\", cnt, \" ms:\", cnt * stepDelay+Number(delay));\n\t\t\t\tNotify.failure(`rejected promise ${cnt} in ${cnt * stepDelay+Number(delay)}`);\t// Reject\n\t\t\t}\n\t\t\t// console.log(\"step:\", cnt,\" ms:\", cnt*delay);\n\t\t\tif (cnt > position-1) {\n\t\t\t\tclearInterval(counter);\n\t\t\t}\n\t\t\tcnt++;\n\t\t},stepDelay)\n  });\n\t\n};\n"],"names":["$h6c0i","parcelRequire","document","forms","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay","step","amount","console","log","value","dv","av","sv","reset","setTimeout","$ce04d3a99e08e73b$var$createPromise","then","concat","catch","position","stepDelay","Promise","resolve","reject","cnt","Notify","success","counter","setInterval","Math","random","Number","failure","clearInterval"],"version":3,"file":"03-promises.d459ed28.js.map"}